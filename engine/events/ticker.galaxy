//=========================================================
//		Apex Roleplaying Engine
//		Copyright (c) 2019, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================



void libapx_update_camera();

void LibApxManagePermissionUi(int p) { 
    int permissionLevel = libapx_player[p].permission_level;
    string permissionLevelText;
    color permissionLevelColor;
    if(permissionLevel == 0) {
        permissionLevelText = "User";
        permissionLevelColor = ColorWithAlpha(100,100,100,80);
    }
    
    if(permissionLevel == 1) {
        permissionLevelText = "Moderator";
        permissionLevelColor = ColorWithAlpha(100,70,70,80);
    }
    
    if(permissionLevel == 2) {
        permissionLevelText = "Administrator";
        permissionLevelColor = ColorWithAlpha(100,00,00,80);
    }
    if(permissionLevel == 3) {
        permissionLevelText = "SadAdmin :'(";
        permissionLevelColor = ColorWithAlpha(0,100,100,90);
    }

    libNtve_gf_SetDialogItemColor(libapx_player[p].permissionLevelUi, permissionLevelColor, PlayerGroupSingle(p));
    libNtve_gf_SetDialogItemText(libapx_player[p].permissionLevelUi, StringToText(permissionLevelText), PlayerGroupSingle(p));
}

bool libapx_trig_ticker(bool testConds, bool runActions) {
    int p;
    unitgroup selected;
    unit u;
    int i;
    int control_bar_ui;
    libapx_update_camera();
    for (i = 1; i <= PlayerGroupCount(PlayerGroupActive()); i += 1) {
        p = PlayerGroupPlayer(PlayerGroupActive(), i);
        selected = UnitGroupSelected(p);

        LibApxManagePermissionUi(p);

        if(UnitGroupCount(selected, c_unitCountAll) > 1 || UnitGroupCount(selected, c_unitCountAll) < 1) {
            libapx_player[p].name_display = false;
        }
        else {
            libapx_player[p].name_display = true;
            u = UnitGroupUnit(selected, 1);
        }
        libapx_update_alllabels(p);
        libapx_update_statdisplay(p);
    }
	return true;
}