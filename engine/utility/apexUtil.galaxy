
bool libapx_is_fixed(string s)
{
	int x = 1;
	string c1 = "";
	while( x != (StringLength(s)+1) )
	{
		c1 = StringSub(s, x, x);
		if( !(c1 == "0" || c1 == "1" || c1 == "2" || c1 == "3" || c1 == "4" || c1 == "5" || c1 == "6" || c1 == "7" || c1 == "8" || c1 == "9" || c1 == ".") ) {
			return false;
		}
		x += 1;
	}
	return true;
}


//Function to blacklist a set of strings
//========================================
//ex _replace unit Interceptor Carrier
//
//
bool libapx_blacklistparms(int catalog, string source, string replace, int p) {
	bool stringOkay = true;
	int test;
	if (catalog == c_gameCatalogUnit) {
		//D8Charge D8ClusterBomb deleted
		if (source == "Interceptor" && replace == "Carrier") {
			//I'll need to make an array with all of the interceptor names and all of the carrier names. I could od a string contains but that would result in over-blockage on some things that are probably not useful, but who knows am i rite
			//For now, the base carrier interceptor crash is done for.
			stringOkay = false;
		}
		//_replace unit BroodlingEscort BroodLord
		else if (source == "BroodlingEscort" && replace == "BroodLord") {
			stringOkay = false;
		}

	}
	test = StringFind(source, "d8", c_stringNoCase);
	if (test != -1) {
		stringOkay = false;
	}


	if (stringOkay) {
		return false;
	} else {
		libapx_print_output(p, "Replacing "+source+" with "+replace+" is a viable way to crash a game. Command halted");
		return true;
	}

}
// y=a(x-h)^2+k
// solving for a
//
fixed util_parabolaCalc(point vertex, point pointGiven, fixed targetX) {
	fixed xh;
	fixed yk;
	fixed a;
	fixed y;
	xh = PointGetX(pointGiven)-PointGetX(vertex);
	xh = AbsF(xh*xh);
	// y=a(xh)+k
	// y-k=a(xh)
	yk = PointGetY(pointGiven)-PointGetY(vertex);
	//yk=a(xh)
	//yk/xh=a
	a = yk/xh;	
	//y=a(x-h)^2+k
	//using targetX
	//
	xh = targetX - PointGetX(vertex);
	xh = AbsF(xh*xh);
	y = (a*xh)+PointGetY(vertex);
	return y;
};