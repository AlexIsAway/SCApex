//=========================================================
//		Apex Roleplaying Engine
//		Copyright (c) 2022, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

// LOAD ENGINE DEPENDENCIES:
// (dependency order matters)


// globals
// =============
// Contains global constants, variables, prototypes, structs, and functions
include "apex/engine/globals/globals.galaxy"


// uiHelper
// =============
// Contains various helper functions for creating ui dialogs:
// use helper functions instead of Blizzard natives in order to unify
// the theme for all dialogs
include "apex/engine/ui_helper.galaxy"


// data
// =============
// defines SCII data catalog constants used for certain commands,
// and include data catalog search and catalog alias functions
include "apex/engine/data/data.galaxy"


// player
// =============
// Contains any important player specific variables during
// runtime of the engine (e.g. player mouse position, chat lines,...)
// Contains string name for player bank
include "apex/engine/player.galaxy"


// settings
// =============
// Contains ingame global settings
// These are used as parameters in certain commands
// Ideally most of these should be adjustable in game
include "apex/engine/settings.galaxy"


//Include images
include "apex/engine/data/all_images.galaxy"
// =============
// Contains all images in an array of strings (lol). And methods to query them. Why doesn't sc2 allow us to search strings ;( 


// search
// =============
// defines searching and how it works
include "apex/engine/data/search.galaxy"

// output
// =============
// All functions for outputting text to the custom chat frame
include "apex/engine/output.galaxy"

// scripts
// =============
// Contains various utility functions used throughout engine
include "apex/engine/utility/scripts.galaxy"


// bank
// =============
// Contains custom functions for writing to player banks
include "apex/engine/bank.galaxy"

// parser
// =============
// Parser for player chat commands and built-in chat system functions:
// Includes frameworks for variables, aliases, and templates parsing
include "apex/engine/chat/parser.galaxy"

// unit
// =============
// Unit spawn related functions, unit death/creation data management,
// unit command caching functionality
include "apex/engine/unit/unit.galaxy"


// unit_panel_info
//===============
// functions to handle unit renaming, subtitling, subtitle colors, and descriptions
// Stores name and subtitle to datatable to be used in ui.
include "apex/engine/unit_panel_info.galaxy"


// unit_card
// =============
// Contains functions to edit and change the unitcard
include "apex/engine/unit_card.galaxy"


// scaler
// =============
// Contains various utility functions used throughout engine
include "apex/engine/utility/scaler.galaxy"


// permissions
// =============
// Contains functions for player permissions related functions
// and unit permissions
include "apex/engine/permissions.galaxy"

// regions
// =============
// Contains helper functions for managing regions and linking
// regions for waygate (teleport) functionality
include "apex/engine/regions.galaxy"

// gamesetups
// =============
// Saving/loading units and their command history into player banks
// -> allows creation of "gamesetups" (act like game saves)
include "apex/engine/gamesetups.galaxy"


// events
// =============
// Events that require triggers to run and update things
// e.g. player moves mouse, unit enters region
include "apex/engine/events/events.galaxy"


// blacklist
// =============
// contains functions for blacklist system
// -> blacklist runs at start of game for host,
//    disables any player on host's blacklist
// player usage of blacklist handled by blacklist in generalCommands
include "apex/engine/blacklist.galaxy"


// data_table_manager
// =============
// contains functions assisting with data tables, including creation, cleanup, deletion, and exists
// Global data tables
// Player related data tables
// Unit related data tables
include "apex/engine/data_table_manager.galaxy"


// debug
// =============
// tools for debugging
include "apex/engine/debug.galaxy"

// engine version
const int gv_LibapxBuildVersion = 2;
const int gv_LibapxBuildSubVersion = 3;
const string gv_LibapxBuildVersionModifier = ".1";


void LibapxEngineInitialize() {
	int player = 1;
	bool adminSet = false;
	int i;

	// intialize engine
	LibapxScriptsInit();				// scripts and dependencies
	gv_LibapxSettingsInitialize();		// initializes map settings
	LibapxPreplacedUnitInitialize();	// assigns unit IDs to preplaced units


	// initialize players
	while ( player < gv_LibapxMaxPlayers ) {
		if( PlayerType(player) == c_playerTypeUser && PlayerStatus(player) == c_playerStatusActive ) {
			gv_LibapxPlayerInitialize(player);			// player settings
			LibapxPLayerEventsInitiallize(player);	// player specific events
			LibapxBlacklistDeprecatedRemoveBank(player);
			// give admin to first active player (assumes player 1 is lobby host and should be default admin)
			// then run admin's blacklist
			if( !adminSet ) {
				gv_LibapxPlayer[player].permissionLevel = LibapxPERMISSIONSLEVELADMIN;
				gv_LibapxCurrentAdmin = player;
				adminSet = true;
				TriggerAddEventTimeElapsed(TriggerCreate("LibapxDelayAdminMessageTrigger"), 7, c_timeGame);
			}
		}
		player += 1;
	}

	LibapxEventsInitialize();			// creates global event triggers
}


bool LibapxDelayAdminMessageTrigger(bool testConds,bool runActions) {
	
	LibapxLogInfoPlayerGroup(PlayerGroupActive(), gv_LibapxPlayerNameColored(gv_LibapxCurrentAdmin) + StringToText(" is the admin."));

	return true;
}