//=========================================================
//		Apex Roleplaying Engine
//		Copyright (c) 2022, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

//Clean Wireframes
void LibapxCleanUpWireframes(int p) {
    int i;
    string wireframeName;
    string wireframeList;
    int j;
	i = BankSectionCount(gv_LibapxPlayer[p].bankStorage) - 1;


    while(i >= 0) {
        if( StringContains(BankSectionName(gv_LibapxPlayer[p].bankStorage, i), "WF_", c_stringBegin, c_stringNoCase) ) {
            wireframeName = BankSectionName(gv_LibapxPlayer[p].bankStorage, i);
            wireframeList = wireframeList + " " + wireframeName;
        }
        i -= 1;
    }

    if(wireframeList == "") {
        return;
    }
    else {
		j = 1;
		while(StringWord(wireframeList, j) != "") {
			BankSectionRemove(gv_LibapxPlayer[p].bankStorage, StringWord(wireframeList, j));
			j+=1;
		}
		LibapxLogInfo(p, "All Wireframes Removed! Checkout <c val=\"00ffff\">@unitcard</c> for making custom unit images! (its much cooler and text based)");
		BankSave(gv_LibapxPlayer[p].bankStorage);
    }
}




// creates, removes key/values from a section in player bank
// !!! BankSave required to ensure the changes persist
void LibapxBankCreate(string section, string key, string content, int player) {
	BankValueSetFromString(gv_LibapxPlayer[player].bankStorage, section, key, content);
	BankSave(gv_LibapxPlayer[player].bankStorage);
}

void LibapxBankRemove(string section, string key, int player) {
	BankKeyRemove(gv_LibapxPlayer[player].bankStorage, section, key);
	BankSave(gv_LibapxPlayer[player].bankStorage);
}

void LibapxBankSectionRemoveAll(string section, int player) {
	BankSectionRemove(gv_LibapxPlayer[player].bankStorage, section);
	BankSave(gv_LibapxPlayer[player].bankStorage);
}

// LibapxBankKeyContentDump
// =================
// prints out content of bank value
void LibapxBankKeyContentDump(string section, string key, int player) {
	if( BankKeyExists(gv_LibapxPlayer[player].bankStorage, section, key) ) {
		LibapxLogInfo(player, StringCase(section, true) + ": " + key);
		LibapxLogInfo(player, "CONTENT: " + BankValueGetAsString(gv_LibapxPlayer[player].bankStorage, section, key));
	}
	else {
		LibapxLogError(player, StringCase(section, true) + " " + key + " DOES NOT EXIST");
	}
}

// LibapxBankSectionDump
// =================
// lists all of a player's aliases/templates
void LibapxBankSectionDump(string section, int player) {
	int count = BankKeyCount(gv_LibapxPlayer[player].bankStorage, section);
	string keys = "[";

	if( count ) {
		while(count) {
			keys = keys + "\'" + BankKeyName(gv_LibapxPlayer[player].bankStorage, section, count - 1) + "\',";
			count -= 1;
		}
		// remove extra ','
		keys = StringSub(keys, 1, StringLength(keys) - 1) + "]";
		LibapxLogInfo(player, StringCase(section, true) + ":\n" + keys);
	}
	else {
		LibapxLogInfo(player, "You have no " + section);
	}
}



void LibapxBankLoad() {
	int i;
	int player;

	for (i = 1; i <= PlayerGroupCount(PlayerGroupActive()); i += 1) {
		player = PlayerGroupPlayer(PlayerGroupActive(), i);
		// LibapxLogPlayerGroupText(PlayerGroupActive(), StringToText("<c val=\"77aaff\">Bank loading for ")+ TextWithColor(PlayerName(player), ColorFromIndex( PlayerGetColorIndex(player, false), c_teamColorDiffuse)));
	
		gv_LibapxPlayer[player].bankStorage = BankLoad( gv_LibapxPlayerBankName,  player);
		BankWait(gv_LibapxPlayer[player].bankStorage);
		gv_LibapxPlayer[player].aliases = LibapxSortAliases(player);
		gv_LibapxPlayer[player].banksloaded = true;


		
		if(gv_LibapxPlayer[player].permissionLevel > 0) {
			LibapxPopulateSettingsFromPlayer(player);
		}

		LibapxCleanUpWireframes(player);
		LibapxChkAllAliases(player);
	}
	
	// LibapxLogPlayerGroupText(PlayerGroupActive(), StringToText("<c val=\"00ff00\">All banks loaded :)</c>"));
}