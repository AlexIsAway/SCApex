//=========================================================
//		Apex Roleplaying Engine
//		Copyright (c) 2022, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

// These are commands purely for testing modules of the engine.
// These are not intended for public use in the game itself.

// LibapxCommandExperiment
// =====================
// test of new command system using func refs
void LibapxCommandExperiment(int user, unitgroup u, string argv, int spawningCount, string bracketText) {
	string param = StringWord(argv, 2);
	string param2 = StringWord(argv, 3);
	string param3 = StringWord(argv, 4);
	string baseValue = "debug_datatable_" + IntToString(user);
	string specifiedValue = param2;

	if(param == "count") {
		DebugLog("counting values");
		DebugLog(IntToString(LibapxTManagerGetCount(baseValue)));
		return;
	}

	if(param == "list") {
		DebugLog("listing values");
		DebugLog(LibapxTManagerGetList(baseValue));
		return;
	}

	if(param == "value") {
		DebugLog("Getting value");
        DebugLog(baseValue + specifiedValue + " : KEYNAME OUTFUNC HERE");
		DebugLog(IntToString(DataTableGetInt(true, baseValue + specifiedValue)));
		return;
	}

	if(param == "cleanup") {
		LibapxTManagerCleanup(baseValue);
		DebugLog("cleaning up all");
	}

	if(param == "set") {
		LibapxTManagerSetInt(baseValue, specifiedValue, StringToInt(param3));
		DebugLog("Set value");
	}

	if(param == "remove") {
		LibapxTManagerRemoveValue(baseValue, specifiedValue);
		DebugLog("remove value");
	}
}

// test sort the input args
void LibapxCommandSort(int user, unitgroup u, string argv, int spawningCount, string bracketText) {
	string var = "TESTVAR";
	int i = 0;
	int n;
	string arg = LibapxArg(argv, 2);
	string s = "";

	// test
	LibapxLogPlayerGroup(PlayerGroupAll(), LibapxStringTrim(argv));

	while( arg != "" ) {
		DataTableSetString(true, var + " " + IntToString(i), arg);
		i += 1;
		arg = LibapxArg(argv, 2 + i);
	}

	libxQsort(var + " 0", i, c_dataTypeString, LibapxStrcmp);

	for( n = 0; n < i; n += 1 ) {
		s = s + DataTableGetString(true, var + " " + IntToString(n)) + " ";
		DataTableValueRemove(true, var + " " + IntToString(n));
	}

	LibapxLogPlayerGroup(PlayerGroupAll(), s);
}
